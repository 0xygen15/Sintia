#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: postgres-deployment
#  labels:
#    app: postgres
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: postgres
#  template:
#    metadata:
#      labels:
#        app: postgres
#    spec:
#      containers:
#      - name: postgres
#        image: postgres
#        ports:
#        - containerPort: 5432
#        envFrom:
#          - configMapRef:
#              name: postgres-secret
#        volumeMounts:
#          - mountPath: /var/lib/postgresql/data
#            name: postgresdata
#      volumes:
#        - name: postgresdata
#          persistentVolumeClaim:
#            claimName: postgres-volume-claim
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres # has to match .spec.template.metadata.labels
  serviceName: 'postgresql-svc'
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: postgres # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres-container
          image: postgres
          envFrom:
          - configMapRef:
              name: postgres-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ['ReadWriteOnce']
#        storageClassName: "csi-disk"
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  labels:
    app: postgres
data:
  POSTGRES_DB: "sintia"
  POSTGRES_USER: "sintia"
  POSTGRES_PASSWORD: "example"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
